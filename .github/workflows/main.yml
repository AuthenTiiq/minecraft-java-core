name: Build and Compile Project

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Étape pour récupérer le code source de votre projet
      - name: Checkout repository
        uses: actions/checkout@v2

      # Étape pour récupérer le module 'minecraft-java-core' (si nécessaire)
      - name: Clone minecraft-java-core repository
        run: |
          git clone https://github.com/AuthenTiiq/minecraft-java-core.git
          cd minecraft-java-core
          npm install  # Installer les dépendances de 'minecraft-java-core'
          npm run build  # Compiler 'minecraft-java-core'

      # Étape pour installer les dépendances de votre projet principal
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          npm install

      # Étape pour compiler votre projet
      - name: Build project
        run: |
          npm run build

      # Étape pour créer l'archive tar.gz avec les fichiers compilés
      - name: Archive compiled files as tar.gz
        run: |
          mkdir release
          cp -r build/* release/  # Copier les fichiers compilés dans le dossier 'release'
          cp package.json release/  # Copier le 'package.json' dans le dossier 'release'
          tar -czf release.tar.gz -C release .  # Créer l'archive tar.gz

      # Étape pour télécharger l'archive tar.gz comme artefact
      - name: Upload compiled files as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: compiled-files
          path: release.tar.gz

      # Étape pour créer la release GitHub
      - name: Create GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: release.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
