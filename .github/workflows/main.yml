name: Build and Compile Project

on:
  push:
    branches:
      - master    # Cette action se déclenche lors d'un push sur la branche master
  pull_request:
    branches:
      - master    # Cette action se déclenche lors d'un pull request sur la branche master
  release:
    types:
      - created   # Cette action se déclenche lors de la création d'une release (vous pouvez personnaliser cela)

jobs:
  build:
    runs-on: ubuntu-latest  # Utilise une machine virtuelle Ubuntu pour l'exécution

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Récupère le code du dépôt

      - name: Set up Node.js
        uses: actions/setup-node@v3  # Configure Node.js pour l'environnement GitHub Actions
        with:
          node-version: '16'  # Spécifiez la version de Node.js que vous utilisez

      - name: Install dependencies
        run: |
          npm install  # Installe les dépendances du projet

      - name: Build project
        run: |
          npm run build  # Exécute le script de build pour compiler le projet TypeScript

      - name: Archive compiled files as tar.gz
        run: |
          # Crée un répertoire pour les fichiers compilés, puis crée une archive tar.gz
          mkdir release
          cp -r build/* release/  # Copie les fichiers compilés dans le dossier release
          cp package.json release/  # Copier package.json dans le dossier release
          tar -czf release.tar.gz -C release .  # Crée l'archive tar.gz

      - name: Upload compiled files as artifacts
        uses: actions/upload-artifact@v3  # Télécharge les fichiers compilés comme artefacts
        with:
          name: compiled-files
          path: release.tar.gz  # Spécifie le fichier tar.gz créé à télécharger comme artefact

      - name: Create GitHub Release
        if: github.event_name == 'release'  # Assure que cela ne se déclenche que lors de la création d'un release
        uses: softprops/action-gh-release@v1  # Utilise l'action pour créer une release GitHub
        with:
          files: release.tar.gz  # Ajoute l'archive tar.gz à la release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Le token d'authentification GitHub
